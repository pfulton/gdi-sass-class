slides:
  -
    content: |
      # Math Operations
      ###### Intro to Sass<!-- .element: class="short-title" -->

    options:
      class: section-card

  -
    content: |
      ### Math Operations<!-- .element: class="short-title" -->

      With Sass, you can write math to calculate numbers for you:

      <table style=" margin: 4rem auto; width: 30%;">
        <!--tr><th>Symbol</th><th>Meaning</th></tr-->
        <tr><td>+</td><td><a target="_blank" href="http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#number_operations">Addition</a></td></tr>
        <tr><td>-</td><td><a target="_blank" href="http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#number_operations">Subtraction</a></td></tr>
        <tr><td>&#42;</td><td><a target="_blank" href="http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#number_operations">Multiplication</a></td></tr>
        <tr><td>/</td><td><a target="_blank" href="http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#division-and-slash">Division</a><sup style="font-size: 50%;">1</sup></td></tr>
      </table>

      <p><small><sup style="font-size: 50%;">1</sup>division is special, check the documentation link for why and how</small></p>

  -
    content: |
      #### Math Operations<!-- .element: class="short-title" -->

      <div class="grid grid-1-1 util-margin-t2">
      <div>
      ###### Sass input<!-- .element: class="util-margin-b50 util-center" -->
      ```
      $layoutWidth: 960px;
      #sidebar {
        width: $layoutWidth/3;
      }
      ```
      </div><div>
      ###### CSS output<!-- .element: class="util-margin-b50 util-center" -->
      ```
      #sidebar {
        width: 320px;
      }
      ```
      </div><div>

  -
    content: |
      #### Math Operations<!-- .element: class="short-title" -->

      <div class="grid grid-1-1 util-margin-t2">
      <div>
      ###### Sass input<!-- .element: class="util-margin-b50 util-center" -->
      ```
      $layoutWidth: 960px;
      $defaultPadding: 16px;
      #main {
        padding: $defaultPadding;
        width: $layoutWidth - $defaultPadding*2;
      }
      ```
      </div><div>
      ###### CSS output<!-- .element: class="util-margin-b50 util-center" -->
      ```
      #main {
        padding: 16px;
        width: 928px;
      }
      ```
      </div><div>

  -
    content: |
      ##### Let's Develop It!
      <hr>

      <div class="grid grid-1-1 util-margin-t2">
      - Write a math expression in Sass to calculate the width of elements in your page layout instead of declaring a number
      - Use a variable to represent the result of your calcuation
      - Hit "save", and your page should refresh so that you can see your changes.

      ```scss
      $layoutWidth: 960px;
      $navWidth: $layoutWidth/3;
      footer {
        width: ($layoutWidth - 200px);
      }
      ```
      </div>
